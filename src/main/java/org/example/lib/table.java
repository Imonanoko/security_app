package org.example.lib;

import java.util.ArrayList;
import java.util.List;

public class table {
    protected static final List<Integer> S_Box = new ArrayList<>(
            List.of(52, 91, 130, 169, 208, 247, 30, 71, 112, 153, 194, 235, 20, 63, 106, 149, 192, 236, 23, 68,
                    114, 159, 204, 250, 39, 86, 134, 181, 228, 19, 70, 120, 170, 219, 12, 64, 117, 168, 221, 16, 73,
                    126, 180, 234, 34, 90, 146, 203, 4, 61, 123, 183, 242, 45, 105, 167, 230, 37, 100, 164, 229, 40,
                    104, 174, 241, 51, 122, 191, 5, 78, 148, 220, 38, 113, 189, 8, 85, 162, 244, 65, 144, 225, 53,
                    137, 217, 48, 136, 222, 55, 143, 237, 72, 161, 0, 95, 193, 29, 131, 231, 77, 178, 24, 129, 239,
                    88, 198, 49, 163, 18, 138, 254, 111, 233, 98, 216, 92, 213, 89, 215, 97, 232, 110, 253, 135, 21,
                    166, 56, 202, 101, 2, 156, 58, 214, 128, 36, 206, 125, 43, 223, 151, 76, 10, 197, 141, 80, 26,
                    238, 184, 142, 99, 62, 32, 9, 248, 218, 205, 196, 190, 195, 201, 212, 246, 11, 41, 75, 116, 160,
                    224, 31, 102, 175, 14, 107, 200, 66, 177, 59, 187, 93, 3, 165, 96, 42, 252, 207, 176, 171, 173,
                    199, 251, 44, 109, 186, 54, 158, 79, 1, 179, 140, 132, 147, 209, 25, 119, 17, 182, 133, 127, 172,
                    22, 139, 74, 60, 94, 227, 118, 108, 188, 81, 67, 154, 84, 152, 69, 150, 103, 6, 46, 50, 35, 28,
                    47, 145, 57, 157, 226, 7, 240, 87, 83, 82, 13, 210, 121, 15, 33, 27, 245, 211, 124, 115, 155, 185,
                    243, 249, 255));

    protected static final List<List<Integer>> DBRArrayType3 = new ArrayList<>(
            List.of(
                    List.of(0, 5, 10, 15, 1, 6, 11, 12, 2, 7, 8, 13, 3, 4, 9, 14),
                    List.of(0, 5, 11, 14, 1, 6, 8, 15, 2, 7, 9, 12, 3, 4, 10, 13),
                    List.of(0, 6, 9, 15, 1, 7, 10, 12, 2, 4, 11, 13, 3, 5, 8, 14),
                    List.of(0, 6, 11, 13, 1, 7, 8, 14, 2, 4, 9, 15, 3, 5, 10, 12),
                    List.of(0, 7, 9, 14, 1, 4, 10, 15, 2, 5, 11, 12, 3, 6, 8, 13),
                    List.of(0, 7, 10, 13, 1, 4, 11, 14, 2, 5, 8, 15, 3, 6, 9, 12),
                    List.of(1, 4, 10, 15, 2, 5, 11, 12, 3, 6, 8, 13, 0, 7, 9, 14),
                    List.of(1, 4, 11, 14, 2, 5, 8, 15, 3, 6, 9, 12, 0, 7, 10, 13),
                    List.of(1, 6, 8, 15, 2, 7, 9, 12, 3, 4, 10, 13, 0, 5, 11, 14),
                    List.of(1, 6, 11, 12, 2, 7, 8, 13, 3, 4, 9, 14, 0, 5, 10, 15),
                    List.of(1, 7, 8, 14, 2, 4, 9, 15, 3, 5, 10, 12, 0, 6, 11, 13),
                    List.of(1, 7, 10, 12, 2, 4, 11, 13, 3, 5, 8, 14, 0, 6, 9, 15),
                    List.of(2, 4, 9, 15, 3, 5, 10, 12, 0, 6, 11, 13, 1, 7, 8, 14),
                    List.of(2, 4, 11, 13, 3, 5, 8, 14, 0, 6, 9, 15, 1, 7, 10, 12),
                    List.of(2, 5, 8, 15, 3, 6, 9, 12, 0, 7, 10, 13, 1, 4, 11, 14),
                    List.of(2, 5, 11, 12, 3, 6, 8, 13, 0, 7, 9, 14, 1, 4, 10, 15),
                    List.of(2, 7, 8, 13, 3, 4, 9, 14, 0, 5, 10, 15, 1, 6, 11, 12),
                    List.of(2, 7, 9, 12, 3, 4, 10, 13, 0, 5, 11, 14, 1, 6, 8, 15),
                    List.of(3, 4, 9, 14, 0, 5, 10, 15, 1, 6, 11, 12, 2, 7, 8, 13),
                    List.of(3, 4, 10, 13, 0, 5, 11, 14, 1, 6, 8, 15, 2, 7, 9, 12),
                    List.of(3, 5, 8, 14, 0, 6, 9, 15, 1, 7, 10, 12, 2, 4, 11, 13),
                    List.of(3, 5, 10, 12, 0, 6, 11, 13, 1, 7, 8, 14, 2, 4, 9, 15),
                    List.of(3, 6, 8, 13, 0, 7, 9, 14, 1, 4, 10, 15, 2, 5, 11, 12),
                    List.of(3, 6, 9, 12, 0, 7, 10, 13, 1, 4, 11, 14, 2, 5, 8, 15)
            )
    );
    protected static final List<List<Integer>> InverseDBRArrayType3 = new ArrayList<>(
            List.of(
                    List.of(0, 4, 8, 12, 13, 1, 5, 9, 10, 14, 2, 6, 7, 11, 15, 3),
                    List.of(0, 4, 8, 12, 13, 1, 5, 9, 6, 10, 14, 2, 11, 15, 3, 7),
                    List.of(0, 4, 8, 12, 9, 13, 1, 5, 14, 2, 6, 10, 7, 11, 15, 3),
                    List.of(0, 4, 8, 12, 9, 13, 1, 5, 6, 10, 14, 2, 15, 3, 7, 11),
                    List.of(0, 4, 8, 12, 5, 9, 13, 1, 14, 2, 6, 10, 11, 15, 3, 7),
                    List.of(0, 4, 8, 12, 5, 9, 13, 1, 10, 14, 2, 6, 15, 3, 7, 11),
                    List.of(12, 0, 4, 8, 1, 5, 9, 13, 10, 14, 2, 6, 7, 11, 15, 3),
                    List.of(12, 0, 4, 8, 1, 5, 9, 13, 6, 10, 14, 2, 11, 15, 3, 7),
                    List.of(12, 0, 4, 8, 9, 13, 1, 5, 2, 6, 10, 14, 7, 11, 15, 3),
                    List.of(12, 0, 4, 8, 9, 13, 1, 5, 6, 10, 14, 2, 3, 7, 11, 15),
                    List.of(12, 0, 4, 8, 5, 9, 13, 1, 2, 6, 10, 14, 11, 15, 3, 7),
                    List.of(12, 0, 4, 8, 5, 9, 13, 1, 10, 14, 2, 6, 3, 7, 11, 15),
                    List.of(8, 12, 0, 4, 1, 5, 9, 13, 14, 2, 6, 10, 7, 11, 15, 3),
                    List.of(8, 12, 0, 4, 1, 5, 9, 13, 6, 10, 14, 2, 15, 3, 7, 11),
                    List.of(8, 12, 0, 4, 13, 1, 5, 9, 2, 6, 10, 14, 7, 11, 15, 3),
                    List.of(8, 12, 0, 4, 13, 1, 5, 9, 6, 10, 14, 2, 3, 7, 11, 15),
                    List.of(8, 12, 0, 4, 5, 9, 13, 1, 2, 6, 10, 14, 15, 3, 7, 11),
                    List.of(8, 12, 0, 4, 5, 9, 13, 1, 14, 2, 6, 10, 3, 7, 11, 15),
                    List.of(4, 8, 12, 0, 1, 5, 9, 13, 14, 2, 6, 10, 11, 15, 3, 7),
                    List.of(4, 8, 12, 0, 1, 5, 9, 13, 10, 14, 2, 6, 15, 3, 7, 11),
                    List.of(4, 8, 12, 0, 13, 1, 5, 9, 2, 6, 10, 14, 11, 15, 3, 7),
                    List.of(4, 8, 12, 0, 13, 1, 5, 9, 10, 14, 2, 6, 3, 7, 11, 15),
                    List.of(4, 8, 12, 0, 9, 13, 1, 5, 2, 6, 10, 14, 15, 3, 7, 11),
                    List.of(4, 8, 12, 0, 9, 13, 1, 5, 14, 2, 6, 10, 3, 7, 11, 15)

            )
    );
    protected static final List<List<Integer>> DBRArrayType2 = new ArrayList<>(
            List.of(
                    List.of(0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12, 1, 6, 11),
                    List.of(0, 5, 14, 11, 4, 9, 2, 15, 8, 13, 6, 3, 12, 1, 10, 7),
                    List.of(0, 9, 6, 15, 4, 13, 10, 3, 8, 1, 14, 7, 12, 5, 2, 11),
                    List.of(0, 9, 14, 7, 4, 13, 2, 11, 8, 1, 6, 15, 12, 5, 10, 3),
                    List.of(0, 13, 6, 11, 4, 1, 10, 15, 8, 5, 14, 3, 12, 9, 2, 7),
                    List.of(0, 13, 10, 7, 4, 1, 14, 11, 8, 5, 2, 15, 12, 9, 6, 3),
                    List.of(4, 1, 10, 15, 8, 5, 14, 3, 12, 9, 2, 7, 0, 13, 6, 11),
                    List.of(4, 1, 14, 11, 8, 5, 2, 15, 12, 9, 6, 3, 0, 13, 10, 7),
                    List.of(4, 9, 2, 15, 8, 13, 6, 3, 12, 1, 10, 7, 0, 5, 14, 11),
                    List.of(4, 9, 14, 3, 8, 13, 2, 7, 12, 1, 6, 11, 0, 5, 10, 15),
                    List.of(4, 13, 2, 11, 8, 1, 6, 15, 12, 5, 10, 3, 0, 9, 14, 7),
                    List.of(4, 13, 10, 3, 8, 1, 14, 7, 12, 5, 2, 11, 0, 9, 6, 15),
                    List.of(8, 1, 6, 15, 12, 5, 10, 3, 0, 9, 14, 7, 4, 13, 2, 11),
                    List.of(8, 1, 14, 7, 12, 5, 2, 11, 0, 9, 6, 15, 4, 13, 10, 3),
                    List.of(8, 5, 2, 15, 12, 9, 6, 3, 0, 13, 10, 7, 4, 1, 14, 11),
                    List.of(8, 5, 14, 3, 12, 9, 2, 7, 0, 13, 6, 11, 4, 1, 10, 15),
                    List.of(8, 13, 2, 7, 12, 1, 6, 11, 0, 5, 10, 15, 4, 9, 14, 3),
                    List.of(8, 13, 6, 3, 12, 1, 10, 7, 0, 5, 14, 11, 4, 9, 2, 15),
                    List.of(12, 1, 6, 11, 0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7),
                    List.of(12, 1, 10, 7, 0, 5, 14, 11, 4, 9, 2, 15, 8, 13, 6, 3),
                    List.of(12, 5, 2, 11, 0, 9, 6, 15, 4, 13, 10, 3, 8, 1, 14, 7),
                    List.of(12, 5, 10, 3, 0, 9, 14, 7, 4, 13, 2, 11, 8, 1, 6, 15),
                    List.of(12, 9, 2, 7, 0, 13, 6, 11, 4, 1, 10, 15, 8, 5, 14, 3),
                    List.of(12, 9, 6, 3, 0, 13, 10, 7, 4, 1, 14, 11, 8, 5, 2, 15)
            )
    );
    protected static final List<List<Integer>> InverseDBRArrayType2 = new ArrayList<>(
            List.of(
                    List.of(0, 13, 10, 7, 4, 1, 14, 11, 8, 5, 2, 15, 12, 9, 6, 3),
                    List.of(0, 13, 6, 11, 4, 1, 10, 15, 8, 5, 14, 3, 12, 9, 2, 7),
                    List.of(0, 9, 14, 7, 4, 13, 2, 11, 8, 1, 6, 15, 12, 5, 10, 3),
                    List.of(0, 9, 6, 15, 4, 13, 10, 3, 8, 1, 14, 7, 12, 5, 2, 11),
                    List.of(0, 5, 14, 11, 4, 9, 2, 15, 8, 13, 6, 3, 12, 1, 10, 7),
                    List.of(0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12, 1, 6, 11),
                    List.of(12, 1, 10, 7, 0, 5, 14, 11, 4, 9, 2, 15, 8, 13, 6, 3),
                    List.of(12, 1, 6, 11, 0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7),
                    List.of(12, 9, 2, 7, 0, 13, 6, 11, 4, 1, 10, 15, 8, 5, 14, 3),
                    List.of(12, 9, 6, 3, 0, 13, 10, 7, 4, 1, 14, 11, 8, 5, 2, 15),
                    List.of(12, 5, 2, 11, 0, 9, 6, 15, 4, 13, 10, 3, 8, 1, 14, 7),
                    List.of(12, 5, 10, 3, 0, 9, 14, 7, 4, 13, 2, 11, 8, 1, 6, 15),
                    List.of(8, 1, 14, 7, 12, 5, 2, 11, 0, 9, 6, 15, 4, 13, 10, 3),
                    List.of(8, 1, 6, 15, 12, 5, 10, 3, 0, 9, 14, 7, 4, 13, 2, 11),
                    List.of(8, 13, 2, 7, 12, 1, 6, 11, 0, 5, 10, 15, 4, 9, 14, 3),
                    List.of(8, 13, 6, 3, 12, 1, 10, 7, 0, 5, 14, 11, 4, 9, 2, 15),
                    List.of(8, 5, 2, 15, 12, 9, 6, 3, 0, 13, 10, 7, 4, 1, 14, 11),
                    List.of(8, 5, 14, 3, 12, 9, 2, 7, 0, 13, 6, 11, 4, 1, 10, 15),
                    List.of(4, 1, 14, 11, 8, 5, 2, 15, 12, 9, 6, 3, 0, 13, 10, 7),
                    List.of(4, 1, 10, 15, 8, 5, 14, 3, 12, 9, 2, 7, 0, 13, 6, 11),
                    List.of(4, 13, 2, 11, 8, 1, 6, 15, 12, 5, 10, 3, 0, 9, 14, 7),
                    List.of(4, 13, 10, 3, 8, 1, 14, 7, 12, 5, 2, 11, 0, 9, 6, 15),
                    List.of(4, 9, 2, 15, 8, 13, 6, 3, 12, 1, 10, 7, 0, 5, 14, 11),
                    List.of(4, 9, 14, 3, 8, 13, 2, 7, 12, 1, 6, 11, 0, 5, 10, 15)

            )
    );
    public static final List<List<Integer>> MixColumn = new ArrayList<>(
            List.<List<Integer>>of(
                    List.of(144 ,67 ,217 ,183 ,102 ,157 ,252 ,167 ,29 ,67 ,147 ,129 ,191 ,166 ,189 ,80),
                    List.of(76 ,43 ,216 ,91 ,216 ,233 ,119 ,96 ,40 ,90 ,232 ,70 ,177 ,74 ,58 ,124),
                    List.of(68 ,202 ,17 ,117 ,132 ,88 ,6 ,66 ,102 ,61 ,91 ,153 ,63 ,90 ,160 ,56),
                    List.of(159 ,162 ,180 ,236 ,14 ,202 ,195 ,52 ,19 ,169 ,99 ,248 ,67 ,76 ,162 ,90),
                    List.of(251 ,169 ,232 ,107 ,98 ,109 ,244 ,24 ,173 ,104 ,151 ,101 ,46 ,199 ,11 ,194),
                    List.of(180 ,72 ,142 ,15 ,211 ,80 ,162 ,163 ,52 ,251 ,225 ,125 ,179 ,233 ,102 ,182),
                    List.of(57 ,202 ,12 ,10 ,96 ,130 ,104 ,86 ,167 ,241 ,12 ,203 ,197 ,91 ,6 ,151),
                    List.of(218 ,189 ,179 ,193 ,152 ,59 ,228 ,20 ,72 ,96 ,24 ,214 ,128 ,172 ,15 ,110),
                    List.of(154 ,169 ,47 ,233 ,160 ,136 ,104 ,196 ,29 ,13 ,236 ,96 ,106 ,116 ,229 ,211),
                    List.of(127 ,193 ,138 ,16 ,219 ,6 ,82 ,156 ,48 ,189 ,202 ,102 ,158 ,193 ,146 ,172),
                    List.of(230 ,246 ,67 ,45 ,172 ,33 ,154 ,117 ,22 ,40 ,34 ,87 ,85 ,82 ,154 ,67),
                    List.of(92 ,241 ,238 ,159 ,230 ,100 ,16 ,198 ,50 ,32 ,43 ,255 ,73 ,14 ,193 ,61),
                    List.of(106 ,122 ,241 ,44 ,79 ,72 ,202 ,176 ,60 ,85 ,216 ,181 ,134 ,86 ,69 ,221),
                    List.of(245 ,199 ,199 ,111 ,206 ,19 ,66 ,163 ,134 ,78 ,144 ,56 ,14 ,140 ,1 ,46),
                    List.of(140 ,49 ,88 ,79 ,181 ,60 ,171 ,33 ,132 ,255 ,69 ,202 ,237 ,119 ,10 ,124),
                    List.of(73 ,218 ,230 ,222 ,175 ,221 ,236 ,18 ,22 ,148 ,84 ,4 ,29 ,222 ,55 ,171),
                    List.of(162 ,176 ,4 ,59 ,203 ,166 ,217 ,62 ,16 ,217 ,183 ,225 ,220 ,250 ,30 ,227),
                    List.of(202 ,98 ,33 ,237 ,44 ,227 ,20 ,80 ,135 ,215 ,10 ,132 ,214 ,41 ,255 ,25),
                    List.of(8 ,191 ,39 ,48 ,217 ,1 ,30 ,253 ,89 ,15 ,221 ,53 ,182 ,108 ,32 ,240),
                    List.of(149 ,244 ,166 ,198 ,45 ,38 ,35 ,193 ,127 ,230 ,222 ,27 ,151 ,47 ,28 ,114),
                    List.of(120 ,62 ,22 ,178 ,103 ,69 ,237 ,181 ,149 ,181 ,78 ,39 ,216 ,216 ,163 ,32),
                    List.of(230 ,130 ,160 ,125 ,221 ,77 ,140 ,254 ,45 ,7 ,71 ,196 ,203 ,163 ,42 ,226),
                    List.of(158 ,70 ,4 ,104 ,83 ,204 ,46 ,84 ,92 ,121 ,87 ,177 ,204 ,66 ,8 ,70),
                    List.of(206 ,159 ,8 ,26 ,232 ,176 ,170 ,35 ,12 ,203 ,235 ,164 ,55 ,198 ,145 ,164),
                    List.of(239 ,131 ,249 ,71 ,53 ,124 ,58 ,198 ,141 ,146 ,6 ,24 ,185 ,90 ,141 ,140),
                    List.of(43 ,254 ,195 ,212 ,250 ,156 ,228 ,88 ,234 ,26 ,208 ,224 ,139 ,59 ,183 ,29),
                    List.of(191 ,219 ,15 ,239 ,252 ,47 ,28 ,163 ,121 ,237 ,113 ,230 ,9 ,126 ,156 ,169),
                    List.of(223 ,47 ,253 ,159 ,123 ,226 ,14 ,159 ,50 ,134 ,192 ,176 ,44 ,33 ,116 ,56),
                    List.of(153 ,76 ,233 ,85 ,204 ,90 ,26 ,25 ,68 ,167 ,66 ,23 ,96 ,230 ,101 ,99),
                    List.of(66 ,163 ,194 ,234 ,146 ,153 ,12 ,224 ,108 ,221 ,247 ,182 ,69 ,110 ,192 ,5),
                    List.of(211 ,9 ,113 ,163 ,27 ,248 ,113 ,28 ,141 ,177 ,127 ,149 ,198 ,39 ,168 ,73),
                    List.of(220 ,235 ,215 ,164 ,94 ,39 ,180 ,52 ,8 ,245 ,10 ,142 ,24 ,128 ,170 ,144),
                    List.of(101 ,225 ,210 ,97 ,18 ,176 ,89 ,208 ,87 ,201 ,154 ,230 ,22 ,227 ,204 ,175),
                    List.of(92 ,56 ,218 ,132 ,118 ,141 ,243 ,115 ,100 ,190 ,23 ,165 ,132 ,253 ,134 ,4),
                    List.of(255 ,216 ,174 ,212 ,41 ,62 ,73 ,52 ,42 ,167 ,180 ,34 ,171 ,201 ,49 ,234),
                    List.of(201 ,28 ,146 ,137 ,171 ,236 ,42 ,2 ,15 ,147 ,39 ,76 ,220 ,232 ,100 ,1),
                    List.of(96 ,12 ,156 ,165 ,4 ,26 ,118 ,17 ,128 ,110 ,45 ,41 ,80 ,197 ,194 ,207),
                    List.of(0 ,137 ,148 ,191 ,0 ,80 ,212 ,216 ,82 ,203 ,226 ,15 ,240 ,249 ,189 ,60),
                    List.of(237 ,213 ,227 ,198 ,150 ,99 ,154 ,38 ,99 ,91 ,106 ,23 ,112 ,128 ,197 ,105),
                    List.of(98 ,18 ,22 ,70 ,236 ,180 ,104 ,212 ,246 ,135 ,111 ,70 ,93 ,52 ,106 ,90),
                    List.of(132 ,33 ,113 ,150 ,124 ,4 ,241 ,144 ,90 ,183 ,227 ,244 ,126 ,18 ,240 ,254),
                    List.of(209 ,107 ,14 ,147 ,217 ,77 ,121 ,65 ,74 ,194 ,166 ,232 ,28 ,197 ,210 ,14),
                    List.of(150 ,25 ,23 ,66 ,153 ,32 ,126 ,126 ,142 ,5 ,107 ,175 ,171 ,254 ,185 ,68),
                    List.of(226 ,44 ,135 ,247 ,221 ,20 ,26 ,168 ,103 ,165 ,121 ,167 ,79 ,20 ,96 ,112),
                    List.of(123 ,2 ,3 ,109 ,250 ,182 ,142 ,20 ,46 ,118 ,185 ,77 ,205 ,106 ,235 ,223),
                    List.of(85 ,202 ,64 ,96 ,193 ,139 ,130 ,216 ,188 ,19 ,152 ,58 ,79 ,34 ,50 ,160),
                    List.of(8 ,87 ,124 ,20 ,239 ,141 ,120 ,160 ,21 ,149 ,54 ,95 ,147 ,149 ,119 ,32),
                    List.of(203 ,224 ,134 ,97 ,54 ,197 ,235 ,53 ,205 ,124 ,102 ,248 ,250 ,27 ,16 ,159),
                    List.of(105 ,46 ,217 ,175 ,109 ,90 ,162 ,1 ,179 ,57 ,4 ,183 ,241 ,146 ,132 ,255),
                    List.of(189 ,170 ,73 ,115 ,91 ,179 ,181 ,67 ,62 ,235 ,25 ,171 ,68 ,53 ,151 ,107),
                    List.of(48 ,217 ,189 ,154 ,170 ,39 ,191 ,82 ,51 ,184 ,75 ,91 ,205 ,61 ,197 ,87),
                    List.of(177 ,197 ,125 ,122 ,117 ,167 ,200 ,116 ,25 ,89 ,42 ,162 ,3 ,196 ,178 ,90),
                    List.of(180 ,196 ,145 ,180 ,251 ,1 ,87 ,220 ,223 ,80 ,191 ,187 ,239 ,120 ,8 ,98),
                    List.of(176 ,51 ,176 ,141 ,241 ,30 ,58 ,50 ,82 ,60 ,253 ,10 ,252 ,146 ,72 ,187),
                    List.of(159 ,148 ,64 ,72 ,245 ,216 ,131 ,62 ,199 ,225 ,112 ,34 ,46 ,157 ,11 ,120),
                    List.of(254 ,151 ,230 ,243 ,162 ,201 ,44 ,43 ,143 ,85 ,206 ,124 ,53 ,123 ,51 ,173),
                    List.of(203 ,140 ,45 ,47 ,199 ,176 ,246 ,219 ,168 ,213 ,207 ,109 ,226 ,61 ,141 ,8),
                    List.of(14 ,186 ,179 ,110 ,61 ,214 ,240 ,223 ,46 ,196 ,216 ,213 ,127 ,64 ,107 ,63),
                    List.of(85 ,39 ,115 ,51 ,221 ,1 ,56 ,131 ,18 ,84 ,251 ,0 ,138 ,19 ,160 ,214),
                    List.of(188 ,68 ,149 ,189 ,26 ,115 ,103 ,109 ,140 ,86 ,192 ,75 ,72 ,165 ,126 ,200),
                    List.of(241 ,255 ,89 ,183 ,187 ,102 ,46 ,100 ,208 ,181 ,74 ,247 ,196 ,62 ,57 ,120),
                    List.of(189 ,198 ,140 ,93 ,50 ,160 ,169 ,157 ,136 ,22 ,65 ,191 ,167 ,195 ,65 ,137),
                    List.of(135 ,232 ,17 ,152 ,27 ,129 ,219 ,51 ,137 ,42 ,23 ,158 ,116 ,188 ,9 ,13),
                    List.of(93 ,240 ,250 ,147 ,89 ,44 ,227 ,44 ,77 ,28 ,21 ,83 ,170 ,167 ,195 ,133),
                    List.of(1 ,82 ,177 ,81 ,78 ,37 ,94 ,155 ,171 ,181 ,196 ,32 ,56 ,27 ,137 ,67),
                    List.of(110 ,25 ,183 ,173 ,194 ,7 ,122 ,92 ,86 ,160 ,30 ,59 ,230 ,37 ,123 ,159),
                    List.of(104 ,234 ,109 ,98 ,217 ,188 ,60 ,230 ,146 ,88 ,15 ,129 ,15 ,123 ,77 ,137),
                    List.of(132 ,253 ,113 ,132 ,186 ,195 ,112 ,186 ,183 ,70 ,211 ,216 ,68 ,242 ,192 ,243),
                    List.of(55 ,121 ,15 ,242 ,80 ,245 ,218 ,233 ,234 ,129 ,147 ,209 ,78 ,190 ,152 ,146),
                    List.of(102 ,187 ,63 ,69 ,169 ,97 ,2 ,49 ,159 ,181 ,231 ,3 ,16 ,252 ,119 ,121),
                    List.of(241 ,5 ,181 ,180 ,123 ,165 ,70 ,54 ,87 ,189 ,151 ,155 ,204 ,4 ,48 ,15),
                    List.of(201 ,23 ,131 ,116 ,74 ,87 ,141 ,82 ,33 ,94 ,57 ,169 ,71 ,3 ,8 ,219),
                    List.of(250 ,49 ,202 ,13 ,172 ,244 ,53 ,129 ,93 ,170 ,24 ,162 ,79 ,99 ,107 ,171),
                    List.of(68 ,252 ,255 ,45 ,49 ,216 ,174 ,226 ,60 ,148 ,245 ,157 ,36 ,114 ,142 ,147),
                    List.of(170 ,223 ,63 ,115 ,103 ,195 ,71 ,82 ,133 ,37 ,16 ,204 ,60 ,223 ,134 ,70),
                    List.of(135 ,57 ,50 ,173 ,133 ,95 ,168 ,164 ,28 ,219 ,7 ,169 ,239 ,117 ,76 ,73),
                    List.of(164 ,11 ,6 ,24 ,54 ,87 ,136 ,236 ,194 ,184 ,6 ,95 ,131 ,163 ,53 ,119),
                    List.of(206 ,130 ,242 ,18 ,255 ,115 ,4 ,104 ,164 ,115 ,194 ,232 ,15 ,81 ,92 ,108),
                    List.of(109 ,242 ,206 ,200 ,207 ,62 ,54 ,126 ,26 ,81 ,210 ,109 ,208 ,118 ,118 ,63),
                    List.of(157 ,179 ,66 ,97 ,40 ,179 ,114 ,87 ,53 ,47 ,200 ,85 ,80 ,255 ,162 ,19)

            ));
    public static final List<List<Integer>> InverseMixColumn = new ArrayList<>(
            List.<List<Integer>>of(
                    List.of(62 ,10 ,83 ,138 ,158 ,198 ,50 ,9 ,115 ,217 ,74 ,2 ,61 ,239 ,57 ,127),
                    List.of(88 ,232 ,241 ,21 ,178 ,18 ,56 ,148 ,28 ,168 ,180 ,192 ,78 ,77 ,51 ,128),
                    List.of(189 ,14 ,30 ,76 ,49 ,15 ,68 ,111 ,33 ,51 ,4 ,81 ,157 ,188 ,209 ,100),
                    List.of(60 ,225 ,19 ,234 ,160 ,133 ,193 ,160 ,10 ,204 ,245 ,220 ,168 ,254 ,235 ,254),
                    List.of(211 ,204 ,35 ,179 ,221 ,178 ,91 ,82 ,4 ,127 ,109 ,0 ,0 ,253 ,143 ,16),
                    List.of(154 ,242 ,180 ,7 ,196 ,91 ,161 ,214 ,66 ,133 ,85 ,32 ,232 ,198 ,1 ,30),
                    List.of(146 ,10 ,133 ,150 ,69 ,46 ,179 ,73 ,234 ,179 ,124 ,223 ,9 ,81 ,104 ,144),
                    List.of(1 ,207 ,55 ,226 ,202 ,220 ,106 ,146 ,212 ,134 ,108 ,222 ,24 ,63 ,253 ,57),
                    List.of(121 ,112 ,4 ,119 ,195 ,74 ,14 ,228 ,200 ,137 ,150 ,49 ,116 ,66 ,166 ,116),
                    List.of(219 ,58 ,171 ,155 ,248 ,188 ,202 ,195 ,103 ,234 ,54 ,80 ,48 ,60 ,115 ,3),
                    List.of(213 ,48 ,14 ,140 ,44 ,164 ,26 ,76 ,221 ,210 ,36 ,124 ,252 ,26 ,124 ,6),
                    List.of(225 ,141 ,90 ,233 ,21 ,70 ,184 ,82 ,108 ,147 ,28 ,194 ,6 ,103 ,234 ,91),
                    List.of(195 ,144 ,132 ,77 ,104 ,20 ,92 ,100 ,164 ,184 ,169 ,45 ,73 ,237 ,243 ,140),
                    List.of(13 ,63 ,128 ,241 ,7 ,12 ,33 ,91 ,30 ,210 ,238 ,233 ,83 ,166 ,51 ,7),
                    List.of(144 ,87 ,173 ,178 ,133 ,89 ,249 ,128 ,38 ,1 ,37 ,230 ,168 ,136 ,100 ,69),
                    List.of(79 ,114 ,218 ,212 ,245 ,231 ,99 ,228 ,127 ,75 ,0 ,189 ,110 ,145 ,25 ,95),
                    List.of(199 ,28 ,12 ,8 ,232 ,39 ,10 ,53 ,16 ,199 ,13 ,115 ,171 ,125 ,190 ,130),
                    List.of(54 ,39 ,133 ,137 ,249 ,71 ,38 ,13 ,98 ,190 ,158 ,225 ,134 ,143 ,44 ,254),
                    List.of(111 ,172 ,93 ,133 ,143 ,250 ,98 ,184 ,205 ,19 ,144 ,106 ,103 ,223 ,111 ,147),
                    List.of(35 ,30 ,22 ,180 ,148 ,92 ,132 ,234 ,6 ,211 ,185 ,111 ,39 ,169 ,251 ,160),
                    List.of(176 ,12 ,22 ,225 ,146 ,178 ,108 ,252 ,84 ,82 ,94 ,137 ,238 ,67 ,231 ,164),
                    List.of(241 ,254 ,141 ,43 ,227 ,81 ,16 ,210 ,57 ,147 ,134 ,161 ,59 ,143 ,13 ,121),
                    List.of(0 ,242 ,237 ,68 ,120 ,39 ,107 ,63 ,241 ,199 ,97 ,31 ,201 ,65 ,68 ,233),
                    List.of(98 ,217 ,125 ,183 ,72 ,168 ,90 ,167 ,175 ,43 ,40 ,75 ,58 ,26 ,106 ,178),
                    List.of(67 ,235 ,138 ,85 ,179 ,27 ,142 ,132 ,234 ,73 ,250 ,151 ,120 ,110 ,191 ,154),
                    List.of(154 ,157 ,64 ,169 ,137 ,190 ,61 ,171 ,186 ,185 ,139 ,118 ,110 ,5 ,113 ,64),
                    List.of(212 ,63 ,157 ,76 ,88 ,6 ,127 ,191 ,21 ,130 ,220 ,186 ,142 ,45 ,215 ,4),
                    List.of(239 ,94 ,36 ,25 ,33 ,52 ,192 ,167 ,129 ,15 ,249 ,181 ,173 ,51 ,255 ,227),
                    List.of(146 ,185 ,135 ,49 ,186 ,63 ,108 ,27 ,163 ,229 ,62 ,130 ,165 ,172 ,202 ,33),
                    List.of(160 ,98 ,154 ,67 ,61 ,84 ,35 ,196 ,220 ,241 ,130 ,131 ,170 ,198 ,109 ,79),
                    List.of(118 ,158 ,111 ,108 ,141 ,62 ,77 ,201 ,164 ,151 ,34 ,189 ,74 ,107 ,62 ,97),
                    List.of(251 ,126 ,203 ,125 ,162 ,191 ,213 ,227 ,108 ,92 ,232 ,155 ,254 ,78 ,103 ,92),
                    List.of(25 ,221 ,223 ,9 ,129 ,251 ,9 ,153 ,235 ,251 ,137 ,129 ,196 ,28 ,254 ,95),
                    List.of(156 ,233 ,169 ,139 ,37 ,56 ,49 ,114 ,192 ,79 ,132 ,123 ,233 ,154 ,60 ,104),
                    List.of(76 ,176 ,238 ,69 ,183 ,251 ,106 ,64 ,193 ,121 ,246 ,47 ,175 ,7 ,32 ,156),
                    List.of(166 ,117 ,119 ,129 ,111 ,98 ,251 ,37 ,231 ,178 ,207 ,8 ,125 ,102 ,154 ,228),
                    List.of(32 ,246 ,202 ,81 ,40 ,29 ,110 ,187 ,145 ,52 ,161 ,13 ,69 ,103 ,214 ,249),
                    List.of(34 ,183 ,224 ,101 ,93 ,51 ,25 ,26 ,234 ,105 ,143 ,160 ,69 ,176 ,246 ,201),
                    List.of(153 ,42 ,75 ,148 ,115 ,223 ,196 ,60 ,187 ,199 ,53 ,134 ,154 ,196 ,14 ,48),
                    List.of(200 ,25 ,30 ,82 ,245 ,97 ,104 ,121 ,133 ,221 ,210 ,230 ,167 ,145 ,29 ,115),
                    List.of(168 ,224 ,159 ,235 ,223 ,25 ,131 ,9 ,168 ,255 ,76 ,149 ,139 ,202 ,161 ,45),
                    List.of(141 ,39 ,151 ,103 ,215 ,232 ,212 ,179 ,109 ,158 ,242 ,199 ,51 ,228 ,50 ,64),
                    List.of(216 ,253 ,184 ,240 ,8 ,108 ,117 ,182 ,242 ,16 ,238 ,134 ,137 ,202 ,230 ,18),
                    List.of(225 ,168 ,35 ,9 ,106 ,189 ,148 ,242 ,48 ,135 ,217 ,113 ,121 ,4 ,133 ,18),
                    List.of(135 ,211 ,204 ,18 ,186 ,211 ,142 ,105 ,86 ,119 ,19 ,98 ,41 ,27 ,243 ,65),
                    List.of(141 ,22 ,43 ,124 ,218 ,48 ,53 ,163 ,97 ,144 ,103 ,17 ,215 ,171 ,34 ,76),
                    List.of(206 ,59 ,129 ,106 ,144 ,7 ,229 ,128 ,244 ,25 ,124 ,35 ,108 ,56 ,131 ,14),
                    List.of(144 ,59 ,222 ,48 ,113 ,48 ,10 ,203 ,51 ,86 ,58 ,99 ,86 ,104 ,176 ,81),
                    List.of(204 ,24 ,76 ,227 ,179 ,166 ,14 ,107 ,213 ,80 ,125 ,151 ,75 ,133 ,242 ,241),
                    List.of(204 ,248 ,141 ,4 ,19 ,212 ,198 ,217 ,13 ,77 ,239 ,96 ,218 ,53 ,12 ,203),
                    List.of(37 ,144 ,31 ,145 ,46 ,211 ,152 ,133 ,84 ,171 ,237 ,25 ,54 ,31 ,127 ,130),
                    List.of(200 ,142 ,28 ,31 ,164 ,221 ,108 ,248 ,0 ,131 ,63 ,251 ,247 ,95 ,95 ,56),
                    List.of(58 ,15 ,219 ,179 ,193 ,14 ,94 ,129 ,153 ,77 ,38 ,195 ,162 ,104 ,118 ,75),
                    List.of(61 ,220 ,61 ,243 ,112 ,30 ,21 ,84 ,11 ,88 ,39 ,151 ,173 ,86 ,45 ,182),
                    List.of(23 ,227 ,254 ,117 ,159 ,75 ,13 ,19 ,219 ,186 ,86 ,9 ,228 ,222 ,110 ,46),
                    List.of(113 ,176 ,162 ,170 ,155 ,146 ,233 ,63 ,145 ,65 ,227 ,101 ,141 ,127 ,222 ,33),
                    List.of(103 ,234 ,228 ,15 ,125 ,121 ,207 ,179 ,38 ,44 ,123 ,244 ,119 ,103 ,55 ,8),
                    List.of(124 ,71 ,46 ,65 ,27 ,253 ,131 ,143 ,38 ,213 ,240 ,113 ,42 ,209 ,229 ,108),
                    List.of(46 ,240 ,112 ,110 ,185 ,100 ,83 ,61 ,67 ,83 ,85 ,245 ,122 ,105 ,204 ,122),
                    List.of(135 ,28 ,110 ,204 ,51 ,13 ,236 ,106 ,54 ,210 ,116 ,254 ,63 ,137 ,42 ,33),
                    List.of(115 ,106 ,45 ,53 ,189 ,131 ,234 ,192 ,198 ,232 ,242 ,174 ,252 ,1 ,62 ,187),
                    List.of(88 ,94 ,187 ,33 ,206 ,81 ,103 ,97 ,13 ,106 ,234 ,129 ,239 ,176 ,102 ,207),
                    List.of(152 ,111 ,240 ,11 ,184 ,165 ,6 ,56 ,222 ,58 ,24 ,96 ,141 ,197 ,10 ,38),
                    List.of(191 ,219 ,112 ,173 ,51 ,18 ,69 ,17 ,120 ,5 ,71 ,4 ,76 ,122 ,184 ,11),
                    List.of(241 ,57 ,55 ,39 ,103 ,18 ,4 ,194 ,186 ,143 ,235 ,38 ,16 ,76 ,229 ,183),
                    List.of(181 ,156 ,154 ,51 ,72 ,180 ,234 ,116 ,190 ,42 ,37 ,234 ,3 ,62 ,158 ,194),
                    List.of(124 ,225 ,127 ,213 ,124 ,151 ,57 ,171 ,75 ,123 ,153 ,244 ,245 ,187 ,76 ,247),
                    List.of(72 ,33 ,157 ,32 ,197 ,14 ,127 ,86 ,175 ,2 ,196 ,201 ,18 ,196 ,85 ,25),
                    List.of(87 ,208 ,11 ,29 ,153 ,237 ,37 ,95 ,164 ,67 ,245 ,96 ,50 ,86 ,8 ,234),
                    List.of(52 ,34 ,126 ,16 ,74 ,8 ,144 ,40 ,113 ,175 ,254 ,54 ,253 ,56 ,107 ,76),
                    List.of(229 ,46 ,25 ,36 ,254 ,22 ,23 ,23 ,180 ,96 ,103 ,72 ,104 ,231 ,233 ,25),
                    List.of(24 ,29 ,142 ,125 ,62 ,224 ,183 ,144 ,222 ,88 ,165 ,239 ,49 ,169 ,49 ,158),
                    List.of(127 ,105 ,183 ,193 ,105 ,184 ,67 ,57 ,61 ,25 ,59 ,20 ,61 ,57 ,142 ,5),
                    List.of(67 ,81 ,198 ,206 ,253 ,22 ,169 ,17 ,167 ,62 ,162 ,229 ,73 ,41 ,218 ,190),
                    List.of(102 ,47 ,23 ,239 ,151 ,61 ,173 ,1 ,226 ,65 ,246 ,157 ,180 ,205 ,243 ,36),
                    List.of(129 ,17 ,39 ,112 ,26 ,89 ,220 ,60 ,47 ,120 ,218 ,161 ,251 ,39 ,143 ,219),
                    List.of(138 ,126 ,172 ,136 ,86 ,24 ,10 ,81 ,11 ,153 ,229 ,149 ,138 ,205 ,157 ,204),
                    List.of(96 ,58 ,105 ,86 ,55 ,12 ,180 ,122 ,107 ,154 ,204 ,139 ,230 ,16 ,248 ,136),
                    List.of(27 ,132 ,153 ,144 ,138 ,106 ,34 ,251 ,62 ,156 ,20 ,125 ,140 ,99 ,117 ,10),
                    List.of(31 ,79 ,171 ,255 ,245 ,235 ,141 ,62 ,96 ,146 ,253 ,201 ,47 ,31 ,113 ,111)

            ));

    //m(x) = x8+x4+x3+x+1 =>100011011
    //因為最大相乘到14次方所以直接建表去模擬多項式除法 ex.最大次方是x^10就 mod GF28ModList[2]
    protected static int[] GF28ModList = {283, 566, 1132, 2264, 4528, 9056, 18112};
}
